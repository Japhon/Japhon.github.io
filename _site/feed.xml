<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Japhon</title>
    <description></description>
    <link>http://japhon.github.io/</link>
    <atom:link href="http://japhon.github.io/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Mon, 16 May 2016 09:52:31 +0800</pubDate>
    <lastBuildDate>Mon, 16 May 2016 09:52:31 +0800</lastBuildDate>
    <generator>Jekyll v2.5.3</generator>
    
      <item>
        <title>云南四川贵州之旅</title>
        <description>&lt;p&gt;这次旅行共经历了21天，主要途径云南（昆明，大理，丽江，香格里拉），四川（成都），重庆，贵州（贵阳，荔波）这些地方。恰逢旅游淡季，全程走得比较随性，很多说走就走的安排，两个人，全程大概每人花费了7000元。&lt;/p&gt;

&lt;h3 id=&quot;section&quot;&gt;行程概述&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;#d1&quot;&gt;云南&lt;/a&gt;&lt;/strong&gt;（D1-D13）-&lt;strong&gt;&lt;a href=&quot;#d13&quot;&gt;成都&lt;/a&gt;&lt;/strong&gt;（D13-D15）-&lt;strong&gt;&lt;a href=&quot;#d15&quot;&gt;重庆&lt;/a&gt;&lt;/strong&gt;（D15-D17）-&lt;strong&gt;&lt;a href=&quot;#d18&quot;&gt;贵州&lt;/a&gt;&lt;/strong&gt;（D18-D21）&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;#d1&quot;&gt;D1【昆明】：飞机（广州-昆明）-南屏步行街-金马碧鸡坊-云南大学-滇池海埂公园&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;#d2&quot;&gt;D2【大理】：火车卧铺（昆明-大理）-洱海西线（海舌公园，喜洲古镇）-大理古城（洋人街，人民路）&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;#d3&quot;&gt;D3【大理】：大理古城（五华楼）-双廊-洱海东线（小普陀-挖色镇）&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;#d4&quot;&gt;D4【大理】：双廊（玉矶岛）-坐车（双廊-沙溪）-沙溪古镇（寺登街-古戏台广场）&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;#d5&quot;&gt;D5【大理/丽江】：坐车（沙溪-剑川）-剑川古城（文献楼）-坐车（剑川-丽江）-丽江古城（四方街-酒吧街-大水车）&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;#d6&quot;&gt;D6【丽江】：拉市海-茶马古道骑马-束河古镇&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;#d7&quot;&gt;D7【丽江】：丽江古城（狮子山）-清溪公园&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;#d8&quot;&gt;D8【泸沽湖】：坐车（丽江-泸沽湖）-大落水村-里务比岛-女儿国-篝火晚会&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;#d9&quot;&gt;D9【泸沽湖】：泸沽湖环游一周（大落水村-里格半岛-尼塞-格姆女神山-祭神台-女神湾码头-泸沽湖镇-走婚桥-草海-滇川友谊桥）&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;#d10&quot;&gt;D10【丽江】：坐车（泸沽湖-丽江）-丽江新城&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;#d11&quot;&gt;D11【香格里拉】：坐车（丽江-香格里拉）-松赞林寺-独克宗古城（龟山公园）&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;#d12&quot;&gt;D12【香格里拉】：普达措国家公园（属都胡-弥里塘-碧塔海）&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;#d13&quot;&gt;D13【成都】：飞机（香格里拉-成都）-双流-文殊院-宽窄巷子-四川大学&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;#d14&quot;&gt;D14【成都】：四川大学及周边-锦江&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;#d15&quot;&gt;D15【重庆】：高铁（成都-重庆）-解放碑步行街-洪崖洞&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;#d16&quot;&gt;D16【重庆】：磁器口古镇-长江索道-皇冠大扶梯-李子坝公园&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;#d17&quot;&gt;D17【重庆】：解放碑-英利国际影院-美食街&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;#d18&quot;&gt;D18【贵阳】：火车卧铺（重庆-贵阳）-花果园湿地公园-甲秀楼&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;#d19&quot;&gt;D19【荔波】：火车（贵阳-麻尾）-坐车（麻尾-小七孔镇）-闲逛&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;#d20&quot;&gt;D20【荔波】：小七孔景区-闲逛小七孔镇&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;#d21&quot;&gt;D21【都匀】：坐车（小七孔-都匀）-高铁（都匀-广州）&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;a-named1a&quot;&gt;&lt;a name=&quot;d1&quot;&gt;第一天：昆明&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;提前定了广州飞昆明的机票。因为想要便宜的机票，所以定了比较早班的飞机，白云机场确实太远了，所以我们提前一天在机场旁边开了个房，还专门找了那种包接送机场的，还算是比较顺利，所以今天早上5点多就早早起床了，顺利地搭上了飞机。这架飞机好小，第一次坐这么小的飞机。不过南航的早餐还是很丰盛的，还配了酸奶和香蕉，吃得很开心。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/photo/Travel-to-Yunnan/IMG_6501.jpg&quot; alt=&quot;YN&quot; /&gt;&lt;/p&gt;

&lt;p&gt;到达昆明机场，还是有点小激动，旅行的第一站。昆明机场特别大，感觉还是很壮观的，听说这是中国第四大机场。整个造型有点像一座大宫殿，后悔没有在飞机上拍照，在机场里就已经拍不出那种很壮阔的感觉了。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/photo/Travel-to-Yunnan/IMG_6502.jpg&quot; alt=&quot;YN&quot; /&gt;&lt;/p&gt;

&lt;p&gt;昆明我们其实本来就把它当成是一个中转城市，虽然说有石林这样的景区可以玩，但是相对于后面我们要去的大理丽江香格里拉，感觉花费一整天去玩一个石林不太划算。下飞机马上感受到了云南对于旅游的重视，机场到处都是大理丽江之类各种景区的宣传，十分吸引人。我们本来以为昆明机场有地铁，但是到了才发现关了，功课没有做足果然还是吃点亏。中间发生了一些小插曲又耽误了一个小时，最后终于坐上了机场巴士前往昆明市区。&lt;/p&gt;

&lt;p&gt;由于没有在昆明过夜，所以没有旅馆可以放行李，在昆明的这一天都是背着全部行李在走的，确实好重走得好累。后来才发现其实可以去火车站寄存，果然还是太年轻。&lt;/p&gt;

&lt;p&gt;机场巴士直接开到了南屏步行街附近。可能是从广州过来的关系吧，以为省会应该就会像广州一样遍布高楼大厦，昆明还是和想象中的有不少差距。发现昆明道路有很多摩托车，但是基本都是电摩，没怎么看到油摩，不知道是不是有什么政策的控制。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/photo/Travel-to-Yunnan/IMG_6510.jpg&quot; alt=&quot;YN&quot; /&gt;&lt;/p&gt;

&lt;p&gt;南屏步行街感觉更像是一个市民广场，比广州的北京路步行街要短很多，可能是工作日的关系人也相对少一些。很有趣的是，路旁摆着很多椅子在那里盲人按摩，好像生意还蛮好的，走得全身酸痛的还蛮想去按一下的哈哈。范围不算大，没走多久就到了昆明的标志性建筑&lt;strong&gt;金马碧鸡坊&lt;/strong&gt;。其实是有两个牌坊，一个上面写着“金马”，一个上面写着“碧鸡”。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/photo/Travel-to-Yunnan/IMG_6506.jpg&quot; alt=&quot;YN&quot; /&gt;&lt;/p&gt;

&lt;p&gt;金马碧鸡坊后面是一个商业中心，有蛮多吃的，看起来都还不错，不过我们还是更感兴趣当地特色的东西。所以找了路边摊买一些之前没听过的东西尝尝。买了一碗包浆豆腐，还有一个饵块。这两种都没有后面在丽江吃到的好吃。不错午餐吃到的汽锅鸡还有米粉就不错，挺好吃的。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/photo/Travel-to-Yunnan/IMG_6515.jpg&quot; alt=&quot;YN&quot; /&gt;&lt;/p&gt;

&lt;p&gt;本来以为金马碧鸡坊就足够我们逛大半天了，结果发现很快就逛完了，但是要去滇池公园还太早，所以就临时决定去云南大学看看。主要是查到说那附近有不少好吃的。坐公交车来到云南大学，公交车上可以看到当地人的肤色很明显的偏黑，感觉我们一看就是外地人哈哈。走去云南大学校门的路上就会经过美食街，这里有很多物美价廉的店，不过看起来全国到处都有，没找到什么特别有当地特色的吃的，所以我们就走走逛逛。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/photo/Travel-to-Yunnan/IMG_6516.jpg&quot; alt=&quot;YN&quot; /&gt;&lt;/p&gt;

&lt;p&gt;本来云南大学是计划外的地方，但没想到走进校园之后一下子喜欢上了这里。这里的建筑都很有特色，看得出来有一定的历史，很好看。路的两面都是成荫的大树，看了介绍好像是银杏。走在路上真的很带感，觉得这里的学生好幸福。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/photo/Travel-to-Yunnan/IMG_6524.jpg&quot; alt=&quot;YN&quot; /&gt;&lt;/p&gt;

&lt;p&gt;树上有好多的松鼠，跳来跳去的好可爱，跑得超级快。抓拍了好久才拍到一张没有糊掉的。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/photo/Travel-to-Yunnan/IMG_6522.jpg&quot; alt=&quot;YN&quot; /&gt;&lt;/p&gt;

&lt;p&gt;找了一个石凳坐下，满眼都是绿色，松鼠就在身后的树上跑来跳去。这一片空气都很好，真的很舒服，很喜欢这样的环境，恨不得多呆一会儿。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/photo/Travel-to-Yunnan/IMG_6523.jpg&quot; alt=&quot;YN&quot; /&gt;&lt;/p&gt;

&lt;p&gt;不知不觉开始起风，然后下了点雨。在云大里面避雨，到雨小一点了再继续出来逛。走到了一条两边的建筑都很文艺的路，不知道是什么路就叫它文艺路吧。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/photo/Travel-to-Yunnan/IMG_6526.jpg&quot; alt=&quot;YN&quot; /&gt;&lt;/p&gt;

&lt;p&gt;据说这边有一家很好吃的烤乳扇，没有找到，错过了。因为还要去滇池公园，查了一下交通要1个小时，所以还是出发了。没来云南之前就已经听说过滇池了，所以还是充满了期待。事实证明，就算是和我们后面去游玩的景色相比，滇池也不会逊色。而且这里更接近市民活动的场所，除了游玩的游客，滇池边还有许多本地人在钓鱼，感觉也是十分惬意。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/photo/Travel-to-Yunnan/IMG_6538.jpg&quot; alt=&quot;YN&quot; /&gt;&lt;/p&gt;

&lt;p&gt;滇池公园有一条长长的步道，虽然背着两个重重的包但是我们依然坚持步行走完。步道旁边有很多漂亮的雕塑，很多人驻足拍照，不过我还是更喜欢自然风光一点，滇池确实很漂亮。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/photo/Travel-to-Yunnan/IMG_6540.jpg&quot; alt=&quot;YN&quot; /&gt;&lt;/p&gt;

&lt;p&gt;听说冬天的滇池还有成群的海鸥在这里过冬，刚好这个时间已经飞回去西伯利亚了，看不到了有点可惜。不过海埂大坝的傍晚还是很美的。在长长的大坝上散步，看着地上的十二生肖的雕刻，路对面就是各种豪宅，感觉真是超棒。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/photo/Travel-to-Yunnan/IMG_6559.jpg&quot; alt=&quot;YN&quot; /&gt;&lt;/p&gt;

&lt;p&gt;回程坐了昆明的双层巴士，刚好第二层没人，感觉像是包了车一样，坐在最前面欣赏着昆明市区的景色。没有很多高楼大厦，接近下班高峰期了也不会像广州深圳一样塞得到处都动不了，随处可见的电动摩托车也增添了这做城市休闲的氛围。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/photo/Travel-to-Yunnan/IMG_6581.jpg&quot; alt=&quot;YN&quot; /&gt;&lt;/p&gt;

&lt;p&gt;听说来昆明就应该吃傣味的菜，所以晚餐就找了一家相关的推荐，点了比较推荐的鬼鸡和烤五花肉。感觉都做得蛮好吃的，不枉费专门跑这么远而且还坐错公交车导致耽误了好长时间。这家叫&lt;strong&gt;老滇缅320傣家&lt;/strong&gt;，在大众点评上面可以找到，值得推荐。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/photo/Travel-to-Yunnan/IMG_6584.jpg&quot; alt=&quot;YN&quot; /&gt;&lt;/p&gt;

&lt;p&gt;吃完晚餐今天的日程基本就算走完了，距离晚上的火车还有不少的时间，所以决定在吃饭的地方附近逛逛，找找当地的超市或者夜宵档。看了一下夜宵感觉没有特别吸引人的地方，不过发现路边有那种专卖牛奶的铁皮小屋，抱着买点早餐的想法买了两瓶牛奶，看了一下是当地产的&lt;strong&gt;雪兰牛奶&lt;/strong&gt;，事实证明后悔没有多买一点，真的太好喝了，而且云南的其他地方再也找不到这么便宜的了。一瓶5块钱，比后面的来思尔，欧亚都要好喝很多，超级推荐！&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/photo/Travel-to-Yunnan/IMG_6589.jpg&quot; alt=&quot;YN&quot; /&gt;&lt;/p&gt;

&lt;p&gt;闲逛了一会儿，就搭乘公交车前往昆明火车站，即将搭乘火车卧铺前往大理。今天一天感觉还是挺累的，毕竟我们没有订旅馆，所以一整天都背着背包，而且背包挺重的因为预备了香格里拉要穿的厚衣服。不过今天还算蛮充实的，查到的昆明感兴趣的地方都去了，还意外地发现云南大学这个非常漂亮的地方，真的超爱。&lt;/p&gt;

&lt;p&gt;第一次睡火车卧铺，感觉上是比想象中的要恶劣一些，不过还是可以接受。毕竟睡一晚火车也相当于省下了一晚时间。还算值得的。&lt;/p&gt;

&lt;h3 id=&quot;a-named1a-1&quot;&gt;&lt;a name=&quot;d1&quot;&gt;第二天：大理&lt;/a&gt;&lt;/h3&gt;

</description>
        <pubDate>Sat, 14 May 2016 00:00:00 +0800</pubDate>
        <link>http://japhon.github.io/life/2016/05/14/Travel-to-Yunnan-23.html</link>
        <guid isPermaLink="true">http://japhon.github.io/life/2016/05/14/Travel-to-Yunnan-23.html</guid>
        
        <category>游记</category>
        
        
        <category>life</category>
        
      </item>
    
      <item>
        <title>混合有限元网格</title>
        <description>&lt;h3 id=&quot;section&quot;&gt;题目&lt;/h3&gt;

&lt;p&gt;Mixed Finite Elements for Variational Surface Modeling&lt;/p&gt;

&lt;h3 id=&quot;section-1&quot;&gt;概述&lt;/h3&gt;

&lt;p&gt;这篇文章可能比较偏学术一点，作者提出了一个常见的偏微分方程的离散采用混合有限元网格的方法，引入更多变量的导数。&lt;/p&gt;

&lt;p&gt;这种方法使用一阶导数，允许一个简单的线性元件离散。在这个设定下，各种边界条件可以是自然离散的。格式化连续区域的限制，并显示这些无缝贴合的混合框架。证明在有限元模型中混合FEM，不同的建模任务，并分析它的有效性和收敛性。&lt;/p&gt;

&lt;h3 id=&quot;section-2&quot;&gt;论文内容&lt;/h3&gt;

&lt;h4 id=&quot;section-3&quot;&gt;论文背景&lt;/h4&gt;

&lt;p&gt;探讨各种类型混合离散网格的收敛特性和假设的离散网格的依赖程度，展示了几个应用程序的混合框架的几何造型，如互动的形状编辑，孔填充，共混物，和表面的修补程序的边界曲线。&lt;/p&gt;

&lt;h4 id=&quot;section-4&quot;&gt;模型问题&lt;/h4&gt;

&lt;p&gt;我们考虑两个重要的例子：拉普拉斯算子和拉普拉斯梯度能量，引入双调和（biharmonic）和三调和（triharmonic）方程&lt;/p&gt;

&lt;p&gt;在第一个问题中我们计算变形U平面Ω0使拉普拉斯能量最小化&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/photo/week8/pic1.png&quot; alt=&quot;week8-pic1&quot; /&gt;&lt;/p&gt;

&lt;p&gt;第二个例子是带有边界条件的二阶导数的拉普拉斯梯度能量，曲率连续曲面建模的重要性。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/photo/week8/pic2.png&quot; alt=&quot;week8-pic2&quot; /&gt;&lt;/p&gt;

&lt;p&gt;所以最小化之后的效果示意如下图&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/photo/week8/pic3.png&quot; alt=&quot;week8-pic3&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;低阶分解：&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;一般的系统的方法来解决问题，涉及高阶导数的离散化是一个无约束的优化问题&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;边界条件类型：&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;在连续的情况下，我们定义了各种边界条件。虽然对于某些应用程序（例如，变形的固定网格）的问题，可以完全在离散域的研究，当一个共同的参考点是必要的网格具有不同的连接和分辨率，接近相同的形状。&lt;/p&gt;

&lt;p&gt;边界条件可以用不同尺寸的域Ω0亚群相关：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;区域边界条件的开放领域ΩF⊂Ω0；如下图：&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/photo/week8/pic4.png&quot; alt=&quot;week8-pic4&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;曲线边界条件对曲线C⊂Ω0&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/photo/week8/pic5.png&quot; alt=&quot;week8-pic5&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;点边界条件对孤立点P∈Ω0&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/photo/week8/pic6.png&quot; alt=&quot;week8-pic6&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;section-5&quot;&gt;混合有限元离散化&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;拉普拉斯能量和双调和方程&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;一个取代了首项的帕普拉斯方程如下：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/photo/week8/pic7.png&quot; alt=&quot;week8-pic7&quot; /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;分段线性单元的离散化：&lt;/p&gt;

    &lt;p&gt;a)	仅用一阶导数表示&lt;/p&gt;

    &lt;p&gt;b)	使用平均值作为顶点区域的能量，通常用于几何建模&lt;/p&gt;

    &lt;p&gt;c)	没有明显的连接到连续的情况&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;混合元素&lt;/p&gt;

    &lt;p&gt;a)	引入附加变量将高阶问题转换为低阶&lt;/p&gt;

    &lt;p&gt;b)	离散变量使用分段线性逼近&lt;/p&gt;

    &lt;p&gt;c)	集总矩阵（Lumped mass matrices）&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&quot;/photo/week8/pic8.png&quot; alt=&quot;week8-pic8&quot; /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;固定曲线条件&lt;/p&gt;

    &lt;p&gt;a)	利用拉格朗日强制执行区域条件&lt;/p&gt;

    &lt;p&gt;b)	离散变量使用分段线性逼近&lt;/p&gt;

    &lt;p&gt;c)	消除aux.变量&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;收敛&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;拉普拉斯能量和三调和方程&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;曲线边界条件&lt;/p&gt;

    &lt;p&gt;a)	固定部分网格外求解区域&lt;/p&gt;

    &lt;p&gt;b)	曲线to区域&lt;/p&gt;

    &lt;p&gt;c)	固定边界曲线&lt;/p&gt;

    &lt;p&gt;d)	环状进入内部指定曲率 &lt;img src=&quot;/photo/week8/pic12.png&quot; alt=&quot;week8-pic12&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;减少固定曲线边界条件&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&quot;/photo/week8/pic9.png&quot; alt=&quot;week8-pic9&quot; /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;收敛&lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&quot;section-6&quot;&gt;实现&lt;/h4&gt;

&lt;p&gt;测试系统的收敛，随机产生的不规则域。一个顶点放置在每个网格中的每个方格中，参数控制的变化规律，用三角形库连接，控制最小的内角&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/photo/week8/pic10.png&quot; alt=&quot;week8-pic10&quot; /&gt;&lt;/p&gt;

&lt;p&gt;填孔：拉普拉斯能量&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/photo/week8/pic11.png&quot; alt=&quot;week8-pic11&quot; /&gt;&lt;/p&gt;

&lt;p&gt;能量或偏微分方程的离散化技术：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;通过引入变量降到低阶&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;用约束来强制执行区域边界条件&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;块质量矩阵&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;收敛第四和第六阶偏微分方程&lt;/p&gt;

&lt;h3 id=&quot;section-7&quot;&gt;心得&lt;/h3&gt;

&lt;p&gt;一开始是看到这篇文章的几个相关视频，觉得十分有趣，才去看了这篇文章，不过没想到学术性十分强烈。确实又碰到比较难看懂的一篇。不过幸好里面所用到的拉普拉斯算子之类的在课堂上就有接触过，所以还不至于很陌生，硬啃下来还是看懂了大概的过程。&lt;/p&gt;

&lt;p&gt;不过这篇论文好像也还是比较浅层面的运算，另外有一篇比较深入地推导过程的我就没有看。&lt;/p&gt;

&lt;p&gt;这篇论文其实有对应的应用的，是在三维层面上对模型进行的一些拉伸操作还有变形，也是建立在拉普拉斯上面的，不过在论文里面没有体现，所以我周报里面也没有涉及。&lt;/p&gt;
</description>
        <pubDate>Sun, 06 Sep 2015 00:00:00 +0800</pubDate>
        <link>http://japhon.github.io/blog/2015/09/06/week8-22.html</link>
        <guid isPermaLink="true">http://japhon.github.io/blog/2015/09/06/week8-22.html</guid>
        
        <category>计算机图形学</category>
        
        
        <category>blog</category>
        
      </item>
    
      <item>
        <title>简单的网格裁剪工具</title>
        <description>&lt;h3 id=&quot;section&quot;&gt;题目&lt;/h3&gt;

&lt;p&gt;Easy Mesh Cutting&lt;/p&gt;

&lt;h3 id=&quot;section-1&quot;&gt;概述&lt;/h3&gt;

&lt;p&gt;文章介绍的是一种简单的网格裁剪工具。这种工具采用类似于Lazy snapping的简单操作，用在了3D模型上。这种简单体现在了它不需要用户精确地指定裁切的边缘，也不需要太多的操作，只需要示意性的几个笔划，就达到对3D模型的“部位”区分。并且在这个基础上，工具运用其他简单的笔划和按键组合，实现了对区分后的部位进行边缘调整，裁剪，拼接，甚至是编辑操作。&lt;/p&gt;

&lt;h3 id=&quot;section-2&quot;&gt;论文内容&lt;/h3&gt;

&lt;h4 id=&quot;section-3&quot;&gt;论文背景&lt;/h4&gt;

&lt;p&gt;文章认为，人们对于部位的认知，其实是基于有意义的部分的区分。而如何界定什么东西有意义，对于人来说可能是非常方便的，就像是“把兔子模型的耳朵裁减掉”这么简单。但是这种建立在人的主观意识的想法，对于计算机而言就显得十分困难了。&lt;/p&gt;

&lt;p&gt;况且，对于同一个物体，不同的想法就可以定义出不同的部位划分，例如有时候会把腿部看成一个部分，有时候则要区分大腿和小腿。如下图：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/photo/week7/pic1.jpg&quot; alt=&quot;week7-pic1&quot; /&gt;&lt;/p&gt;

&lt;p&gt;所以文章的目标就是找到一个方法，可以按照用户的意图进行网格划分，用户通过指定网格中的哪些部分属于“前景”（即需要的部分）和背景（即不需要的部分）来切割出一个“有意义”的部位。&lt;/p&gt;

&lt;p&gt;这种找到有意义的部分，区别于传统的碎片分割，“部分”其实是建立在碎片之上的，因为它的“有意义”，所以我们可以对它赋予更多有相对完整性的东西。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/photo/week7/pic2.jpg&quot; alt=&quot;week7-pic2&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;section-4&quot;&gt;操作方法&lt;/h4&gt;

&lt;p&gt;这个工具主要的操作就是前景背景笔画，边缘调整，裁剪拼接，编辑。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;前景笔划&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;这个工具里面是采用绿色的笔划代表前景（即需要的部分），采用红色的笔划代表背景（即不需要的部分），然后鼠标的左键操作的是前景，右键操作的是背景，直接在模型上面进行涂画操作即可。如下：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/photo/week7/pic3.jpg&quot; alt=&quot;week7-pic3&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;边缘调整&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;只需要使用鼠标在边缘处进行操作，直接对于边缘一些不理想的区域进行手动的拉伸等操作。从文章中举的众多例子来看，这种操作在一般情况下使用的概率不高，只有在碰到一些特殊模型的情况，或者使用者有极其细致的要求时，才能用上。可以说这是文章这个工具做得严谨的一个体现。虽然说使用频率不大，但是对于这个工具可以操作的精细程度就增加很多！如下图：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/photo/week7/pic4.jpg&quot; alt=&quot;week7-pic4&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;拼接&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;拼接可以说是作者比较幽默的地方，其实本质上就是裁剪，但是作者在文章中把裁剪出来的东西互相拼接，做出了一些很有趣的组合，让大家为之一笑的同时，也更加深刻地理解到这个功能的用处。因为对于模型的处理来说，很多情况下我们可能是在其他渠道找到一个模型（不是自己绘制），而且可能只是需要用到这个模型的一个部分，那么这个时候就可以使用这种简单地裁剪，拼接到我们需要用到的地方上面去。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/photo/week7/pic5.jpg&quot; alt=&quot;week7-pic5&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;编辑&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;文章中采用的是前面的方法，先要选择一个需要编辑的区域，然后在选择了的情况下，画出一条与前景相对应的变换后的线条，代表选中的区域按照前景线到当前线的变化。十分的方便快捷易用，如下：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/photo/week7/pic6.jpg&quot; alt=&quot;week7-pic6&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;section-5&quot;&gt;算法实现&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;大体思路&lt;/strong&gt;：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;先进行等照度计量（Isophotic Metric），然后利用最小规则，得到所有负的最小主曲率的边界之间的部分，来分解三维形状的凹纹。将最小规则加入等照度计量之中优化，得到经过最小规则改进的等照度计量。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;区域分割，从种子顶点开始增长前景区域（绿色笔触）和背景区域（红色笔触），两个部分同时增长。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;边界优化：对于边界的锯齿状区域，进行网格上的“蛇”边界平滑。计算snaxel（我大胆猜测这个词是作者造的，意思就是蛇上面的一个元素，pixel of snake大概是这个意思，实在不好翻译而且容易歧义所以下面保留了英文）的内部能量和外部能量。&lt;/p&gt;

    &lt;p&gt;a)	内部能量：基于角的蛇邻边θ在切平面上的投影线&lt;/p&gt;

    &lt;p&gt;b)	外部能量：基于两个主要曲率&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;具体内容：&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;等照度计量改进：&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;上面我们提到了它是利用了最小规则，得到下面式子&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/photo/week7/pic7.jpg&quot; alt=&quot;week7-pic7&quot; /&gt;&lt;/p&gt;

&lt;p&gt;KD为沿路径方向曲率&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/photo/week7/pic8.jpg&quot; alt=&quot;week7-pic8&quot; /&gt;&lt;/p&gt;

&lt;p&gt;g(x)为负曲率大曲率的增强函数&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;区域增长策略&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;从种子顶点开始，增长前景区域的绿色笔触，增长背景区域的顶点上红笔划的种子，两个部分同时增长。文章中的描述概括出来大概是这样，可能显得不太好理解，所以下面用图的形式来进行步骤的递进演示：&lt;/p&gt;

&lt;p&gt;首先是在模型上绘制出的前景线和背景线，三角形代表模型上面的网格，这里只是抽取一小块的部分来进行示意性的表示。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/photo/week7/pic9.jpg&quot; alt=&quot;week7-pic9&quot; /&gt;&lt;/p&gt;

&lt;p&gt;根据上面计算出来的等照度距离，对于周围的点进行排序，并找到距离最小的点。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/photo/week7/pic10.jpg&quot; alt=&quot;week7-pic10&quot; /&gt;&lt;/p&gt;

&lt;p&gt;将找到的这个距离最小的点，与笔划进行连接，构成的一个小三角形归入该笔划（无论是前景还是背景）的范围中。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/photo/week7/pic14.jpg&quot; alt=&quot;week7-pic14&quot; /&gt;&lt;/p&gt;

&lt;p&gt;继续上面的步骤，对剩下的周围的点进行等照度距离的排序，不断扩充前景线和背景线的范围（注意，两者是同时进行的，就是看距离如果更小的优先处理）&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/photo/week7/pic11.jpg&quot; alt=&quot;week7-pic11&quot; /&gt;&lt;/p&gt;

&lt;p&gt;最后，当整个区域都被绿色和红色覆盖时（其实体现出来是用F和B去替代顶点的值，判断标准就是当所有的值都是F或者B时），则结束循环，分解完成。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/photo/week7/pic12.jpg&quot; alt=&quot;week7-pic12&quot; /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;边缘优化&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;采用一个贪婪算法，以最大限度地提高蛇的能量，通过操作上述三个操作的迭代方式。在文章中，细化迭代是快速的，实时细化切割边界。精炼切割边界使用我们的蛇技术，在原切割边界线在蓝色锯齿而精致的边界线，是光滑的蛇绿色分区的优化效果。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/photo/week7/pic13.jpg&quot; alt=&quot;week7-pic13&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;section-6&quot;&gt;心得&lt;/h3&gt;

&lt;p&gt;这周的这篇周报可能我放了比较多的图，因为这篇论文其实他是有对应的PPT还有视频的，上面也有源代码可以跑一下。后面还做了很多十分有趣的扩展。我觉得在PPT的帮助下，理解这篇论文才变得更加容易，就是因为它里面有很多的图，所以我觉得周报的话结合这些图来进行论述可能相比于我单纯用文字的话，更加清晰一点。这次算是做了一点尝试吧。&lt;/p&gt;

&lt;p&gt;这篇文章也是十分有趣的，讲述了他们做的一个非常简单方便的处理模型的工具。这种操作的方法十分简单，但是达到的效果却十分的奇妙，特别是他的编辑操作，虽然我没有很懂它的变形原理，但是看了它示意的效果，觉得做得很精致。突然觉得毕业设计如果做这个方向的可能也是不错的，就是对于建立的模型可以通过简单的操作来达到变形之类的功能。&lt;/p&gt;

&lt;p&gt;但是我是结合Kinect来开发的，所以可能可以用手势来代替这里面的鼠标操作，可能需要一点模式识别的知识来区分手势，做一些简单的手势来达到对于一个模型的操控，如挤压，拉伸，扭曲等，应该也是十分有趣的。不知道能不能做，先记录下来，下周可能再找一篇编辑三维模型的文章更深入地来了解一下这个方向的东西吧。&lt;/p&gt;
</description>
        <pubDate>Sun, 30 Aug 2015 00:00:00 +0800</pubDate>
        <link>http://japhon.github.io/blog/2015/08/30/week7-21.html</link>
        <guid isPermaLink="true">http://japhon.github.io/blog/2015/08/30/week7-21.html</guid>
        
        <category>计算机图形学</category>
        
        
        <category>blog</category>
        
      </item>
    
      <item>
        <title>看看新发布的坚果手机</title>
        <description>&lt;p&gt;&lt;img src=&quot;/photo/nut/pic1.jpg&quot; alt=&quot;pic1&quot; /&gt;&lt;/p&gt;

&lt;p&gt;很喜欢这句slogan。虽然锤子的T1之前饱受争议，从涛涛不绝的发布会，到和王自如的舌战，不管评价是褒多还是贬多，都无可置疑罗永浩把锤子手机提到了风口浪尖的位置，在大家视野中刷足了存在感。&lt;/p&gt;

&lt;p&gt;虽然很多人没有为锤子手机买单，没敢当那个小白鼠。但是大家也在足够多的评测中看出，锤子手机确实在细节处理上做足了功夫，看到了足够多的诚意。所以虽然看到了很多吐槽的点，但是实力派这一点还是可以得到肯定的。&lt;/p&gt;

&lt;p&gt;漂亮，也许是我并不喜欢这种花花绿绿的鲜艳配色，从iphone 5c到魅蓝，都是这种类似的糖果配色。但是坚果手机在后盖上做出的一些纹路的细节处理，却让我刮目相看。我觉得，虽然同样是塑料壳，但是质感上还是很大差别的。运用纹路来提高手感虽然并没有让手机档次上提升多少，但是用户确实可以真真切切地感受到手感上面带来的改变。能够在1000元级别的机子上注重“手感”的用户体验，我相信会给整个只谈高配置低价格的千元级别竞品带来观念上的强烈冲击！&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/photo/nut/pic4.jpg&quot; alt=&quot;pic4&quot; /&gt;&lt;/p&gt;

&lt;p&gt;当然，虽然我不太喜欢它这种配色的改变，可能T1的那种给我的厚重感更强烈一些，但是毋庸置疑，这种活泼的配色更多地赢得了女生们的芳心。T1对于女生来说简直无法忍受的“黑黑一坨”，也在大胆地拓宽自己的受众。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/photo/nut/pic3.jpg&quot; alt=&quot;pic3&quot; /&gt;&lt;/p&gt;

&lt;p&gt;对于漂亮，罗永浩执着的还不止是手机的外观。对于包装，他也毫不含糊。除了精致简约的视觉效果，坚果手机的包装更提供了很好的使用体验。坚果手机的包装成功实现“3-5秒滑开”，这对于包装生产商来说是一项严苛的挑战，对纸材和生产工艺的要求都非常高。还有一个细节，坚持“情怀”的罗永浩团队不允许在包装滑动打开后出现手工胶带的痕迹，这也是其他手机厂商从来没有提出过的要求。在经过数次试验，几近放弃的时候，转折性的一幕出现了，斯道拉恩索正元团队研究出了独特的定型技术帮助避免划痕，并采用半自动化代替手工制作，生产效率更高，质量更稳定。追求得这么极致，确实让我们感受到了浓厚的诚意！&lt;/p&gt;

&lt;h3 id=&quot;section&quot;&gt;不得不提的配置&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/photo/nut/pic2.jpg&quot; alt=&quot;pic2&quot; /&gt;&lt;/p&gt;

&lt;p&gt;与红米，魅蓝发布会上大谈特谈配置不同，坚果手机从一开始就没有以一种“我性价比很高你要买我”，而是以一种“你需要我所以你要买我”的态度，这是让我觉得很好的一点。相对于以前，在性能过剩和价格相对趋于实惠的现在，大家显然已经麻木了各种“极具冲击力”的高配置，连雷布斯都已经开始不谈跑分谈体验的时候，其实高性价比这个标签已经慢慢褪色。坚果手机让大家看到，他不用特地强调他的配置多么高超，但是还是看得出这配置也还过得去，并不会是“避而不谈”的弱区。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/photo/nut/pic5.jpg&quot; alt=&quot;pic5&quot; /&gt;&lt;/p&gt;

&lt;p&gt;和小米一样，其实锤子走在最前面的不是他的硬件，而是他的锤子系统。如果单纯是一台漂亮的手机，相信锤子手机不会那么值得期待。相对于流畅运行，“好用”是现在大家对于手机提出的更高要求。这显然是在系统软件层面对于系统的优化才可以解决的问题。锤子的系统在它的手机出来之前口碑还是不错的，这也是他现在积累的资本。&lt;/p&gt;

&lt;h3 id=&quot;section-1&quot;&gt;触动内心的惊喜&lt;/h3&gt;

&lt;p&gt;更换后盖，手机主题自动切换&lt;/p&gt;

&lt;p&gt;坚果手机采用了可拆卸后盖的设计，这其实也是小有文章的。坚果手机的后盖内设有金属触点，在更换手机后壳时系统也会随之更换相搭配的主题。（虽然说有点模chao仿xi一加手机的嫌疑，虽然也许这个设计本身就有一点脑残，但是对于换个手机壳就是换个心情的用户来说，确实在换了手机壳之后多了一重期待）&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/photo/nut/pic6.jpg&quot; alt=&quot;pic6&quot; /&gt;&lt;/p&gt;

&lt;p&gt;滚动截屏&lt;/p&gt;

&lt;p&gt;如果说更换后盖还有先行者，那么滚动截屏绝对是锤子的首创。而且这个功能无疑抓到了用户的痛点，以往要截好几张图的聊天记录，现在终于可以一步到位，一张解决。这个设计虽然小，但是足够看出锤子在讨好用户上面还是下了很多功夫的，这个功能应该也是做了很多的调研之后才产生的一个需求，足够让人为之一乐的设计！&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/photo/nut/pic8.jpg&quot; alt=&quot;pic8&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;section-2&quot;&gt;不可忽视的嘈点&lt;/h3&gt;

&lt;p&gt;坚果手机支持双卡双待功能，同时兼容移动联通双4G网络，但是该机两个卡槽有主副之分，只有SIM1卡槽能够支持移动以及联通的3G/4G网络，SIM2卡槽仅能够兼容移动联通的GSM网络。这也有意味着，当有两张手机卡要使用它们的网络时，只能使用在SIM1卡槽的，切换网络就只能拆下后壳手动换卡了哈哈哈&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/photo/nut/pic7.jpg&quot; alt=&quot;pic7 双卡&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;section-3&quot;&gt;小总结&lt;/h3&gt;

&lt;p&gt;啊啊啊，发现自己说了锤子的好多好话。不过确实对于锤子的这次发布，我还是持比较肯定的态度的，借用网络上一句评价“这是反映了锤子成长的一款产品”。从899元的价格坚持不再，到双卡的妥协，再到细节上依旧的极致追求，可以看到罗胖子不再是原来哪个罗胖子了，但是罗胖子还是原来那个罗胖子。锤子确实成长了，也让人看到了更多的期待，脚踏实地的锤子，让人看到了未来！&lt;/p&gt;

&lt;p&gt;不过，我还是继续用我的Iphone……哈哈哈……(逃&lt;/p&gt;
</description>
        <pubDate>Thu, 27 Aug 2015 00:00:00 +0800</pubDate>
        <link>http://japhon.github.io/essay/2015/08/27/how-about-nut-19.html</link>
        <guid isPermaLink="true">http://japhon.github.io/essay/2015/08/27/how-about-nut-19.html</guid>
        
        <category>评测</category>
        
        
        <category>essay</category>
        
      </item>
    
      <item>
        <title>实习生活小记</title>
        <description>&lt;p&gt;两个月的实习差不多也就只剩一个多星期了，加上下周还有抗日战争70周年的假期，所以剩下的时间也差不多了。趁着最近还比较有空，对之前的实习生活做一下简单的记录。这里基本是流水账，没什么干货，留着以后自己看吧。&lt;/p&gt;

&lt;h3 id=&quot;section&quot;&gt;普普通通的一天&lt;/h3&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Time&lt;/th&gt;
      &lt;th&gt; &lt;/th&gt;
      &lt;th&gt;Activity&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;07:20&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;起床，三个闹钟，顺便把舍友吵醒，然后开始美好的一天&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;07:40&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;吃早餐，一饭热腾腾的粉和豆浆，路口的鸡蛋灌饼&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;07:55&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;大学城北，熟悉的音乐，熟悉的右边第五个门&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;08:06&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;万胜围，熟悉的空车，熟悉的地铁报，熟悉的右边第三个门&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;08:24&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;客村，熟悉的交通管制，熟悉的候车的乘客请往里面走，熟悉的早高峰标志性空车&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;08:35&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;石牌桥，对一路外卖的传单say no，然后优雅地坐上电梯进入太古汇，装作很轻松的样子推开那奇重无比的玻璃门&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;08:45&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;如交通管制一般地排队等电梯，队伍太长就直接爬楼梯。到公司，指纹打卡，“谢谢”，来到自己的座位上，打开电脑，翻开桌子上面的书来看&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;09:00&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;开始上班，整理一下昨天工作的进度，看看哪些东西还没有做完，自己做到了哪里，然后开始完成自己的进度&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;10:15&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;订饭啦订饭啦，10点半之前下单ele.me可以减1块钱，猪杂汤饭，梅菜扣肉拼凉瓜炒蛋，毫记，大塘，都城&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;xx:xx&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;小会议室开会，这里的椅子好舒服，好像换回去自己坐啊&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;11:00&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;饭等一下会不会太晚来了啊，要不要打个电话过去催一催啊，好担心好担心&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;11:15&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;饭来啦，怎么来得那么快啊，等一下会不会凉了，好担心好担心&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;12:00&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;开饭啦！看看今天的饭怎么样，闻了它的味道问了好久了&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;12:30&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;指纹打卡，然后趴在桌子上睡一下&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;13:00&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;响起了音乐，下午时段的上班开始了&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;xx:xx&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;终于写完了需求和原型，发给老大过一下。老大说可以，去会议室开一下会PK一下吧。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;xx:xx&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;在会议室被虐成狗之后，回到自己的座位又拼命地大改特改之后，老大终于过了。于是把原型把给平面的同事，把原型和需求发给技术。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;xx:xx&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;看着平面设计做出来的设计稿，经过仔细的对照，和自己的原型没有出入之后，一起交给了技术&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;xx:xx&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;看着技术按照平面做完的测试版，我哭晕在厕所。卧槽，这能忍？马上报告老大，我们需要前端来完成这个。老大说，不急，先实现出来。前端的现在比较缺人，等我去招。囧&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;xx:xx&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;各位同事，大后天就是展会了，后天机器就要运过去了，今天的购物平台还存在着不少问题，大家务必在今晚之前把流程打通，明晚之前出稳定版。好咯，加班咯&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;18:00&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;下班打卡，反正要加班，打两次，先去吃饭&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;18:30&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;加班的同事可以到茶水间喝汤，最后一位喝的同事请拔掉电源&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;xx:xx&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;最后把这几个BUG修复好，整体过一遍OK就下班&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;xx:xx&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;回学校，地铁地铁！！&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&quot;section-1&quot;&gt;小小收获&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;信任感&lt;/strong&gt;：实习到现在，觉得工作中最重要的还是信任感。不管交到自己手上的工作是什么，都要有足够的热情去对待它。对待一件事情的态度，交付出去的东西质量如何，决定了大家对你的评判。而信任感就是一次一次的大家对你态度的认可积累起来的。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;思考&lt;/strong&gt;：实习所做的事情有时候比较集中，有时候又比较琐碎。安排好自己的时间，其实可以多出很多自己的小空间。这些利用这些时间可以对自己正在做的还有已经做了的事情进行一些思考，往往静下来的时候比匆匆忙忙赶进度的时候更能有一些思维的灵感。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;学习&lt;/strong&gt;：实习其实也是积累经验的过程。不断尝试和接触新的东西，不断面对一些未曾面对的困难，也是不小的收获。有时候碰到一些问题，盲目地瞎想，还不如和有经验的同事请教，有时候可以得到冲击自己思维的解决方案。这就是学习的过程。当然，抽出一点时间看看书也是很有必要的。&lt;/p&gt;
</description>
        <pubDate>Tue, 25 Aug 2015 00:00:00 +0800</pubDate>
        <link>http://japhon.github.io/life/2015/08/25/note-for-life-18.html</link>
        <guid isPermaLink="true">http://japhon.github.io/life/2015/08/25/note-for-life-18.html</guid>
        
        <category>实习</category>
        
        
        <category>life</category>
        
      </item>
    
      <item>
        <title>2D草图三维化</title>
        <description>&lt;h3 id=&quot;section&quot;&gt;题目&lt;/h3&gt;

&lt;p&gt;3D Modeling with Silhouettes&lt;/p&gt;

&lt;h3 id=&quot;section-1&quot;&gt;概述&lt;/h3&gt;

&lt;p&gt;文章介绍了一种新的基于草图的建模方法，在二维上进行两个方向（前方和上方）的草图的绘制，画出轮廓之后，通过“组装”轮廓的形状，转化生成3D的模型。即将三维空间上的模型构建搬到了二维空间中来完成。&lt;/p&gt;

&lt;h3 id=&quot;section-2&quot;&gt;论文内容&lt;/h3&gt;

&lt;h4 id=&quot;section-3&quot;&gt;简介&lt;/h4&gt;

&lt;p&gt;文章提出一种新的基于草图的建模方式，可以针对业余和专业的用户。设计师首先在二维中勾勒出一个物体，通常是从正面、侧面和顶部的视图，然后使用这些草图作为一个参考，在构建一个计算机上的三维模型。&lt;/p&gt;

&lt;p&gt;从算法的角度，文章采用的是一个在CAD-CAM比较具有挑战性的方法：布尔运算（具体后面详述）。通过视觉上简单的交叉思想，就可以运用二维图像进行复杂的三维空间模型的构建。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/photo/week6/pic1.jpg&quot; alt=&quot;pic1&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;解读&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;在我的印象中，包括从初中以来接触的只是，三维的模型应该是要由三幅图像，即xyz轴三幅图像才能形成完成的三维物体的。而且还没有办法包含模型内部的一些特殊的构建。而文章在这一点上面做出了很大的突破，只用了两幅图片，发现其实这两幅图片已经涵盖了所有的信息点了，然后解决模型内部的细节构建，则是运用了我们在计算机中十分常见的布尔运算，使用不同的性质（颜色）的线来代表不同的物体，然后直接生成模型后进行布尔操作，就生成了最终的结果。这方法的巧妙之处给我之前的思维带来了很大的冲击。&lt;/p&gt;

&lt;h4 id=&quot;section-4&quot;&gt;方法&lt;/h4&gt;

&lt;p&gt;（文章花了比较多的篇幅在介绍用户接口，即如何使用它，这里就不加详述，主要关注其算法实现的部分）&lt;/p&gt;

&lt;p&gt;一个零件的形状是模拟它的轮廓线的交叉点，这是相同的视觉船体（hull）。减法部分被切走，通过相交的子牵引部分的轮廓线，并减去从原来的部分的结果。&lt;/p&gt;

&lt;p&gt;在之前的方法中，计算任意多面体的布尔操作涉及许多特殊的情况，并在网格的一部分，一个错误会使其无法生成正确的表面其他地方。这是众所周知的难以产生强大的实施。&lt;/p&gt;

&lt;p&gt;在本文中提出了一个简单的算法，可以计算出固体产生任意CSG树，从而应用于轮廓圆柱体。由于二维布尔运算碰到的特殊情况远比三维布尔运算少，由此产生的CSG实体各个方面依赖性就显著降低，所以这个算法易于实现，且具有鲁棒性。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/photo/week6/pic2.jpg&quot; alt=&quot;pic2&quot; /&gt;&lt;/p&gt;

&lt;p&gt;最后还引入了一个简单的平滑算法的操作，生成一个表面拉普拉斯变化幅度最小的表面，并且仍然具有原始输入的形状。&lt;/p&gt;

&lt;h4 id=&quot;csg&quot;&gt;CSG固体计算&lt;/h4&gt;

&lt;p&gt;我们通过检查每一个潜在的平面上一个最终的三维实体可能，计算一个CSG形状固体算法。每一个输入轮廓的每一部分都有一个这样的平面：它是一个平面，它有一个正常的正交的段和轮廓的观看方向。（将所有曲线轮廓为折线）&lt;/p&gt;

&lt;p&gt;这个算法寻找对应于平面的表面上的收益如下：&lt;/p&gt;

&lt;p&gt;首先，我们找到了每个轮廓的交点与平面的。我们标记这些交叉多边形集成电路。对于每一个轮廓，我们也找到了平面（相对于内部），这是我们的标签，这是一个子集的轮廓线的平面的交点。&lt;/p&gt;

&lt;p&gt;然后，我们应用二维布尔运算的交叉点和面多边形对应的一组的轮廓，布尔操作应用在相应的轮廓线的固体，计算产生的固体。在一般情况下，布尔运算可以计算任何2个固体，每一个平面是已知的，产生平面的固体，允许进一步的操作，以适用于派生固体。&lt;/p&gt;

&lt;h4 id=&quot;section-5&quot;&gt;计算形状交叉口&lt;/h4&gt;

&lt;p&gt;给定一个平面，用于每个轮廓。&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;找到集成电路，轮廓线和平面的交点。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;我们发现平面的轮廓与平面的表面的交点。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;找到完全是在这条线的轮廓部分。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&quot;section-6&quot;&gt;进行布尔运算&lt;/h4&gt;

&lt;p&gt;在一个平面上的布尔运算，可以计算两固体A和B，还有其内部连线I和S，表面的多边形是已知的，以产生固体C，由其自身的内部和表面的多边形定义。&lt;/p&gt;

&lt;p&gt;最小化拉普拉斯变化幅度&lt;/p&gt;

&lt;p&gt;我们采取平滑如FiberMesh中的方法，并将其应用为一系列简单的平滑迭代。每次迭代更新顶点的位置如下：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/photo/week6/pic3.jpg&quot; alt=&quot;pic3&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;section-7&quot;&gt;心得&lt;/h3&gt;

&lt;p&gt;这周看的这边文章也是十分有趣，也是类似于模型构建的。这篇就是介绍采用二维图像转化为三维图形的。并且这篇文章的可贵之处在于它不仅做出来了这个方法，而且把用户接口和界面也实现出来了，使用鼠标的操作，将复杂的算法转化为便捷的可视化操作。&lt;/p&gt;

&lt;p&gt;而且这篇文章一个很大的冲击在于它只运用了两幅图像，就生成了三维的模型。这种思维上的转变带来的操作上的便捷，会是一种全新的设计体验。&lt;/p&gt;
</description>
        <pubDate>Sun, 23 Aug 2015 00:00:00 +0800</pubDate>
        <link>http://japhon.github.io/blog/2015/08/23/week6-20.html</link>
        <guid isPermaLink="true">http://japhon.github.io/blog/2015/08/23/week6-20.html</guid>
        
        <category>计算机图形学</category>
        
        
        <category>blog</category>
        
      </item>
    
      <item>
        <title>站在技术的角度思考</title>
        <description>&lt;p&gt;实习到现在，觉得产品经理不仅要做好自己手头的工作，分析好需求，更重要的是要和各式各样的角色打交道。我实习的公司是IT公司，当然最常见的就是和技术人员打交道了。怎么样和他们交流才更高效，更合理呢？&lt;/p&gt;

&lt;h3 id=&quot;section&quot;&gt;技术人员在乎的是什么？&lt;/h3&gt;

&lt;p&gt;曾经闲暇时和程序员聊天，旁敲侧击地问了例如“工作中你最痛恨的是什么”。然后仿佛他们也是憋了一肚子的苦水，于是乎blablabla说了一大堆，总结了一下大概是下面类似的几个场景：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;辛辛苦苦做好的东西，因为种种原因（例如老板嫌你走路的姿势不对，fou掉了），白干了&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;自己用了很大精力做的东西（用了一个很牛逼的算法），被直接无视&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;被不懂或者半懂的人（例如部门小BOSS）对着自己做的东西指手画脚&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;脑洞开太大，因为技术或者设备配置等原因完全不可能实现的需求&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;所以，我们可以从这些场景中捕捉到他们内心深处真正的&lt;strong&gt;需求&lt;/strong&gt;。用一个词来概括就是&lt;strong&gt;“自我价值”&lt;/strong&gt;。他们渴望自己的劳动成果被采用，渴望自己的付出得到肯定和理解，渴望自己的能力得到体现和发掘，当然也渴望有可以有效沟通的人。&lt;/p&gt;

&lt;h3 id=&quot;section-1&quot;&gt;技术人员如何思考问题？&lt;/h3&gt;

&lt;p&gt;程序员整天和代码打交道。编程的思想，就是计算机的世界观。所以他们是如何思考问题的呢？&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;技术人员更加关心定量的东西，而不是留有想象空间或者描述性的东西。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;技术人员更关注按照需求实现出来，而不太关心需求之中是否还欠缺了什么细节。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;技术人员更希望听到哪些异常需要他们去处理，而不是哪些异常不需要他们去处理。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;其实技术人员是一群可爱的人，他们想法其实很简单，他们的世界也很简单。他们不会轻易来质疑你的想法是不是靠谱，他们只会在逻辑或者流程上走不通，不清晰的时候才来找你寻求解决方案，只有在涉及到其他技术人员的代码的时候，才会来让你帮他们询问技术方面的细节。&lt;/p&gt;

&lt;p&gt;他们不希望在代码实现之外的层面上思考问题，他们只是希望你告诉他们做出来的东西需要是什么样子的，并且，&lt;strong&gt;说清楚，说清楚，说清楚&lt;/strong&gt;。&lt;/p&gt;

&lt;h3 id=&quot;section-2&quot;&gt;如何照顾到技术人员的想法？&lt;/h3&gt;

&lt;p&gt;所以对于我们来说，和技术人员探讨的问题，更多的集中在需求&lt;strong&gt;是否可实现&lt;/strong&gt;的层面上。也许有时候一个我们看似很简单的问题，在代码那边就要涉及到很底层的架构的改动；也许有时候一个我们看似非常牛掰的方案，代码实现出来也就是一行。&lt;/p&gt;

&lt;p&gt;也许我们没有办法完全了解技术人员的工作内容，我们至少可以站在计算机实现的角度和他们探讨，在做之前先打通各技术模块之间人员的关系，然后确定最终的需求，尽量避免什么都不了解然后发现做不出来之后再来改。&lt;/p&gt;

&lt;p&gt;当然，作为经常要和技术人员打交道的产品经理，我觉得懂一点编程是有必要的。你可以了解更多他们思考问题的方式，清楚他们实现过程的关键点（主要是涉及到不同技术人员或团队之间需要互相调用的接口或者数据），然后可以在出现问题或者技术人员出现瓶颈的时候，及时地沟通好相关的人员。&lt;/p&gt;

&lt;h3 id=&quot;section-3&quot;&gt;其他&lt;/h3&gt;

&lt;p&gt;&lt;em&gt;前面都是废话&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;作为一个合格的产品经理，大家平常还是要……多健身多锻炼身体，真正碰到问题的时候，一大波技术人员上门来找你了，挨顿揍……才不至于太疼……疼……疼……&lt;/p&gt;

&lt;p&gt;而且，有时候还可以揍回去。&lt;/p&gt;

&lt;p&gt;当然实在是情况紧急的时候，高喊一句“PHP是世界上最好的语言”来脱身，也不是说不可以……哈哈&lt;/p&gt;
</description>
        <pubDate>Sat, 22 Aug 2015 01:17:56 +0800</pubDate>
        <link>http://japhon.github.io/essay/2015/08/22/Thinking-in-artisan-14.html</link>
        <guid isPermaLink="true">http://japhon.github.io/essay/2015/08/22/Thinking-in-artisan-14.html</guid>
        
        <category>产品经理</category>
        
        <category>实习</category>
        
        
        <category>essay</category>
        
      </item>
    
      <item>
        <title>手绘草图</title>
        <description>&lt;h3 id=&quot;section&quot;&gt;题目&lt;/h3&gt;

&lt;p&gt;Ofﬂine Sketch Parsing via Shapeness Estimation&lt;/p&gt;

&lt;h3 id=&quot;section-1&quot;&gt;概述&lt;/h3&gt;

&lt;p&gt;这篇论文的主题十分有趣，是进行一个将手画的草图解析为计算机中流程图的方法。而且相对于现有的类似的方法，它进行了一些很必要的改进。
1.	进行了shapeness estimation（注：Shapeness这个词在各大词典上面都搜不到相关的释义，我在这里及下文把它翻译为“形变”，可能不太准确），从而把候选组的个数从几千大大降低到只有几十。
2.	提出了三级级联框架（three-stage cascade framework），进行脱机的素描解析，降低错误率。&lt;/p&gt;

&lt;p&gt;文章反复说明的一个说明结果的例子：仅用32个候选组的情况下（注：之前的工作通常都是几千），达到96.2%的检出率（注：应该就是正确率）&lt;/p&gt;

&lt;p&gt;下图是作者展示的成果，这效果着实被惊艳到！&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/photo/week5/pic1.jpg&quot; alt=&quot;week5-1&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;section-2&quot;&gt;论文内容&lt;/h3&gt;

&lt;h3 id=&quot;section-3&quot;&gt;主要步骤&lt;/h3&gt;

&lt;p&gt;文中提出了一个用于脱机素描解析的框架，使用选择识别的策略。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;三级级联框架：&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;形变估计&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;形状识别&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;利用素描领域的知识解析&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&quot;/photo/week5/pic2.jpg&quot; alt=&quot;week5-2&quot; /&gt;&lt;/p&gt;

&lt;p&gt;其中的&lt;strong&gt;形变估计&lt;/strong&gt;：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;1.1	首先检测少量的stroke groups（注：这个也不知道怎么样比较准确地翻译它，暂且称之为“笔画组”，感觉差不多是这个意思），快速找到好的形状并识别出这些组。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;1.2	将这些有良好封闭性的手绘形状归一化成非常小的尺寸，来识别他们的形状。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;1.3	使用“形变估计”算法的评分（shapeness estimation，好吧我承认这个词我翻译得比较失败，还是稍微标一下原文避免误会）来估计这个“笔画组”是不是一个好的形状。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;1.4	为了加快“形变估计”，引入紧凑而有效的特征值来表示每一个“笔画组”。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;1.5	为了加快特征值的提取，避免重复操作，文章又提出了一个预处理，来计算每个笔画中的主要信息。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;1.6	进行预操作，计算特征值，避免频繁重复提取特征值。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;shapeness-estimation&quot;&gt;形变估计（shapeness estimation）&lt;/h4&gt;

&lt;p&gt;我们给出的笔划提取图像集合。&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;生成候选笔画组：图像的N条描边，将2N可能的组。我们利用空间的约束，以减少搜索空间。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;压缩 INT64 特征值表示：1) 处理笔画级别变化的手绘形状，2) 方便快速的特征提取。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;快速特征值提取：为相关群体特征提取时，尽可能多地避免重复对相同笔画的操作。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;学习形变测量：学习一个线性模型，使用线性SVM，保留与得分最高的笔画组数目：&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&quot;shape-recognition&quot;&gt;形状识别（Shape Recognition）&lt;/h4&gt;

&lt;p&gt;利用一种更准确的孤立的素描识别算法来预测形状类型。可以在这里使用一些良好执行的分类器来识别手绘制的形状。论文中采用了1NN分类器，使用原始的 720 视觉功能。每个组得分为特征向量输入的形状和中训练集的形状之间的距离。计算每个组的得分后，将这些组得分进行排序，随后进行非最大抑制 (NMS)。如果为达到以下条件，将这个组删除：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;它与一个笔画组共享相同的笔画，并且另外一个具有较好 (较小) 的评分&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;其定界框完全包含，或被一个具有较高 (较小) 评分的笔画组完全包含。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;下图为形变估计和形状识别的效果图：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/photo/week5/pic3.jpg&quot; alt=&quot;week5-3&quot; /&gt;&lt;/p&gt;

&lt;p&gt;利用领域知识进行素描解析（Sketch Parsing using Domain Knowledge）&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;将识别到的形状中的文字进行分组：使用格雷厄姆扫描算法，为每个识别后的形状计算凸壳。然后，在凸壳内的笔画组合在一起。手写的文字识别算法可以用于进一步分析的分组的笔触。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;识别连接器：使用深度优先算法（DFS），从每一个形状出发，判断两个不同的形状中间是否有连接，并且确定是连线还是箭头。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;将其余的笔画进行分组：识别出形状，连接器和形状中的文本后，我们继续将其余的笔画作为嘈杂笔画或其他种类的模式进行分组操作。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&quot;section-4&quot;&gt;实验结果&lt;/h4&gt;

&lt;p&gt;与其他方法进行对比之下，论文中采用的方法在准确性上优势明显&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/photo/week5/pic4.jpg&quot; alt=&quot;week5-4&quot; /&gt;&lt;/p&gt;

&lt;p&gt;而且同时，效率上也有这比较大的优势。就像本文一直强调的，仅用了32个候选组，就达到了96.2%的准确率。&lt;/p&gt;

&lt;h3 id=&quot;section-5&quot;&gt;心得&lt;/h3&gt;

&lt;p&gt;这星期看得这篇论文是高老师之前分享在群里的一篇非常有趣的论文。这是看了这几篇论文以来最让我着迷的一篇论文了。&lt;/p&gt;

&lt;p&gt;它不会很单纯地秀一些底层的算法和优化逻辑，而是真真切切地用算法的方式，创新的思维来解决一个现实中的问题。如果论文中的这种方法得到推广，直接可以手画流程图就直接转化在计算机里面，这将是非常好的体验！&lt;/p&gt;

&lt;h3 id=&quot;kinect&quot;&gt;附：Kinect学习小记&lt;/h3&gt;

&lt;p&gt;正如微软文档里面自己说的一样，最快捷的方式，就是直接调用它的接口，这一点说得虽然很打击开发者的自信心，不过也真的很有道理。这几个星期看了关于Kinect SDK的东西，当然也看了一些周边的东西例如openni。感觉微软的SDK确实有它的过人之处。&lt;/p&gt;

&lt;p&gt;例如有人在博客上用openni实现的一个把人物像抠出来，然后把背景换掉的功能，我试用了一下，虽然在我的机子上面跑还不至于崩溃，但是帧数就十分有限，显得有一点卡顿，而且边缘也没有处理得比较精细，看它实现的过程已经比较复杂了。但是用微软的SDK直接调用它，出来的效果就比较理想了，帧数也多而且边缘的细节出来的都比较好。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/photo/week5/pic5.jpg&quot; alt=&quot;week5-5&quot; /&gt;&lt;/p&gt;

&lt;p&gt;其实实现出来这个在有SDK的前提下就变得不太困难了。只需要调用SDK中的对于锁定的深度图像的检测，然后对于图像中发生变化的图像进行对背景的替换就可以了。调用的方式如下：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/photo/week5/pic6.jpg&quot; alt=&quot;week5-6&quot; /&gt;&lt;/p&gt;

&lt;p&gt;十分简洁地就利用到了Kinect SDK的属性。而且这个效果可能是微软在代码上面做了很多的优化，所以运行起来的效果比网上很多论坛上面提供的开源代码的效果要好很多。而接下来就只需要对于抓取到的不固定的图像的位置进行替换，进行对应的关系，然后把背景图的颜色信息替换为摄像机拍摄的像素信息。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/photo/week5/pic7.jpg&quot; alt=&quot;week5-7&quot; /&gt;
&lt;img src=&quot;/photo/week5/pic8.jpg&quot; alt=&quot;week5-8&quot; /&gt;&lt;/p&gt;

&lt;p&gt;体会到了SDK调用的优越性之后，下周打算把里面给的sample的代码都自己手动得改一改，调一调参数，更加详细地了解一下里面调用的具体方法。争取接下来的几周能够在这几个sample还有师兄给的一些博客资源中，找到可以给我之前的想法搭建一个基本框架的东西，实现最基本的功能。然后再在这个环境中间部署一些纹理和模型的图形。&lt;/p&gt;

&lt;p&gt;虽然说直接调用SDK的代码还是比较容易看懂的，但是当自己真正下手改的时候还是发现有很多关联的逻辑关系会出错，可能自己还没有真正的把这些实现弄明白吧。接下来可能可以尝试一下更大的改动，甚至是把两个功能合在一起试一下看看有什么效果。可能会对自己的理解比较大帮助。&lt;/p&gt;

&lt;h3 id=&quot;section-6&quot;&gt;其他&lt;/h3&gt;

&lt;p&gt;感觉自己之前看论文的时候可能更多的在周报里面讲的是自己对论文看完之后的一些理解。和同学交流了一下，觉得可能这种理解可以更加深层一些，不单停留在字面上，可能自己也可以提出一些质疑，一些疑问，甚至一些反驳。周报确实是一种很好的东西，写给老师，其实也是写给自己。也许这些质疑或者反驳不一定正确，但是它可能更能带动我的思考，把问题和自己的思考都记录下来，也许学到的东西更多了的时候，返回来看，可能就会又有不同的理解和看法了。&lt;/p&gt;
</description>
        <pubDate>Mon, 17 Aug 2015 03:24:32 +0800</pubDate>
        <link>http://japhon.github.io/blog/2015/08/17/week5-17.html</link>
        <guid isPermaLink="true">http://japhon.github.io/blog/2015/08/17/week5-17.html</guid>
        
        <category>计算机图形学</category>
        
        <category>Kinect</category>
        
        
        <category>blog</category>
        
      </item>
    
      <item>
        <title>产品实习快速成长手记</title>
        <description>&lt;h3 id=&quot;section&quot;&gt;观点&lt;/h3&gt;

&lt;p&gt;为什么想当产品？&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;喜欢从系统的角度去思考问题，会考虑到价值链的上下游，不至于让自己陷入以偏概全的境地。&lt;/li&gt;
  &lt;li&gt;享受将自己的想法落地的快感，每一个产品经理都有一双上帝之手。&lt;/li&gt;
  &lt;li&gt;喜欢心理学，对人的研究永远没有止境。&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;时间管理——让时间增值。&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;早上至少提前20分钟到公司，看书，最好是一些比较难啃的，对自己发展有帮助的书，尽量让自己的内心从纷扰的公共交通中平静下来。&lt;/li&gt;
  &lt;li&gt;上班的前15分钟，对自己昨天做的东西过一遍，然后对今天要做的事情进行一个简单的计划。计划不用太相近，但是一定要让自己清楚，优先级。如果东西太多没有办法理清楚，就用笔记下来。&lt;/li&gt;
  &lt;li&gt;用自己的方式把之前做过的东西保存下来。每周，看看自己做的东西和以前相比有没有进步，每月，再看看。发现自己的每一点改变，思考这些改变是出于怎样的考虑。&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;什么是好的产品？&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;解决用户需求：会来用&lt;/li&gt;
  &lt;li&gt;拥有不错的体验：用得开心&lt;/li&gt;
  &lt;li&gt;有一定的用户粘性：会继续用&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;微信的本心：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;欢迎服务&lt;/li&gt;
  &lt;li&gt;抵制营销&lt;/li&gt;
  &lt;li&gt;为用户体验而战&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;分解-量化-整合&lt;/p&gt;

&lt;p&gt;目标-用户-场景&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;为什么要做？&lt;/li&gt;
  &lt;li&gt;针对的用户群体是什么？&lt;/li&gt;
  &lt;li&gt;在什么场景会使用？&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;留意周围的人是怎样使用产品的，关注“&lt;strong&gt;行为&lt;/strong&gt;”而不仅是产品本身。&lt;/p&gt;

&lt;p&gt;关注数据，如APP的使用时间：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;【最高峰】晚上10点&lt;/li&gt;
  &lt;li&gt;【最低谷】凌晨4点&lt;/li&gt;
  &lt;li&gt;【其他极值】中午12点。&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;遇到无法沟通的人：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;尽可能先了解对方的想法是什么，挖掘出真正的矛盾点&lt;/li&gt;
  &lt;li&gt;阐述自己的观点时，尽可能用数据及图表&lt;/li&gt;
  &lt;li&gt;在平时尽可能的建立自己的说服力，不马虎，守时等&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;axure&quot;&gt;原型设计（Axure）&lt;/h3&gt;

&lt;p&gt;尽量清晰地表达页面的逻辑关系，不要抠样式上的细节。&lt;/p&gt;

&lt;p&gt;尽可能重用控件，尽可能使用母版，节约时间，更多的精力和时间用在交互和流程的设计上。而且，方便以后对母版进行修改之后不用再在内容上多做改动。&lt;/p&gt;

&lt;p&gt;尽可能在原型中直接表述清楚观点：动态原型样式&amp;gt;静态图片示意&amp;gt;文字说明&lt;/p&gt;

&lt;p&gt;原型中不太清楚的部分尽可能的用文字描述清楚，而不要单纯只在文档中体现。文档（如果有的话）中与之相对应的比较难理解的部分也用一些突出表示如_下划线_或者&lt;strong&gt;加粗&lt;/strong&gt;。&lt;/p&gt;

&lt;p&gt;不过描述得多清楚，都可能会存在意想不到的沟通障碍。所以交付设计和技术实现是，保持沟通很重要。&lt;/p&gt;

&lt;h3 id=&quot;section-1&quot;&gt;其他&lt;/h3&gt;

&lt;p&gt;我上面说的可能都是错的&lt;/p&gt;
</description>
        <pubDate>Fri, 14 Aug 2015 01:34:30 +0800</pubDate>
        <link>http://japhon.github.io/essay/2015/08/14/Note-For-PM-13.html</link>
        <guid isPermaLink="true">http://japhon.github.io/essay/2015/08/14/Note-For-PM-13.html</guid>
        
        <category>产品经理</category>
        
        <category>实习</category>
        
        
        <category>essay</category>
        
      </item>
    
      <item>
        <title>容量法建模</title>
        <description>&lt;h3 id=&quot;section&quot;&gt;题目&lt;/h3&gt;

&lt;p&gt;A Volumetric Method for Building Complex Models from Range Images&lt;/p&gt;

&lt;h3 id=&quot;section-1&quot;&gt;概述&lt;/h3&gt;

&lt;p&gt;这个系统采用的是容量法（Volumetric method）。这是由一个累积的加权有符号距离函数组成的。一次处理一个深度图像，并把图像转换成一个距离函数，同时把当前的距离函数通过一个简单的方案和之前数据整合起来。与此同时，方法通过run-length编码来提高空间效率，通过同时配准体积元素和遍历扫描线来提高时间的效率，通过等值面提取（isosurface extraction）获得表面模型。最后使用边界细分来填补模型表面的空缺来优化模型。&lt;/p&gt;

&lt;p&gt;为了使得深度扫描能够得到很好的应用，我们希望表面重构技术具备以下性质：
1. 增量更新；
2.	模型能够表现出方向的不确定性；
3.	能够填补模型的空缺；
4.	确保离群值的稳定。
然而，很多算法都只是包含了其中的一些性质。
而本文提供的容量法就能够同时具备以下所有性质：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;范围不确定度的表示-范围内的图像数据通常具有非对称分布的误差随着视觉传感器线路的主方向，&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;利用全方位数据-如果正确使用，这种冗余可以减少传感器噪声。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;增量和顺序独立更新-增量更新使我们能够获得每一次扫描或小组扫描后的建模，让我们选择下一个最佳的扫描方向&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;时间和空间效率-复杂的对象可能需要很多范围的图像，以建立一个详细的模型&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;鲁棒性-异常值和系统范围的扭曲可以创建具有挑战性的情况下重建算法&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;对拓扑类型没有任何限制&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;在重建中填孔的能力-给定一组范围内的图像，不完全覆盖的对象，表面重新建设，必然是不完整的。在这些情况下，这种算法可以自动填充这些孔与合理的表面，产生一个模型，都是“无懈可击”和美观。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;section-2&quot;&gt;论文内容&lt;/h3&gt;

&lt;h4 id=&quot;section-3&quot;&gt;问题&lt;/h4&gt;

&lt;p&gt;通过集成配准的深度图像来进行表面重构的方法和技术已经有很大的发展，然而这些算法都存在这样或那样的问题从而不能很好的去满足应用的需求&lt;/p&gt;

&lt;h4 id=&quot;volumetric-integration&quot;&gt;体积集成（Volumetric integration）&lt;/h4&gt;

&lt;p&gt;通过集成从每一帧计算出来的距离函数以及权重（weight）来计算表面每个点的加权符号距离函数。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/photo/week4/pic1.jpg&quot; alt=&quot;week4-1&quot; /&gt;&lt;/p&gt;

&lt;p&gt;权重的选择依赖于方法所采用的深度扫描技术。并不是获取所有数据之后才集成，而是使用增量的方式，把当前深度图像的函数与已经计算好的由前面图像所集成得到的距离函数进行融合。深度的测量是有误差的，误差包括网格之间配准时产生的误差以及扫描技术固有的误差，这些误差可能发生在每个点的椭圆范围内。深度图像的集成使得我们可以计算出一个零点等值面。最后得出一个不完整的表面模型（带有洞的）。&lt;/p&gt;

&lt;h4 id=&quot;hole-filling&quot;&gt;空缺填补（Hole filling）&lt;/h4&gt;

&lt;p&gt;作用在方法所构造出来的体积表面上而不是网格上。算法的关键在于把表面上所有的点区分为三个状态，分别是：unseen、empty、near the surface。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/photo/week4/pic2.jpg&quot; alt=&quot;week4-2&quot; /&gt;&lt;/p&gt;

&lt;p&gt;首先要把三维像素初始化为“unseen”状态。更新三维像素的状态，计算每个像素的距离函数以及权重。沿着扫描的视线来确定状态为“empty”三维像素，这样成为表面雕刻（surface carving）在有符号的距离函数的零点处提取等值面，同时也提取在“empty”和“unseen”状态间的表面。由于会导致锯齿的问题，所以我们需要通过后期过滤去模糊空缺处的表面的锯齿。&lt;/p&gt;

&lt;h4 id=&quot;section-4&quot;&gt;扫描技术的局限&lt;/h4&gt;

&lt;p&gt;光学的方法只能提供外部表面的数据，对于内部的表面是看不到的。对于复杂的对象可能需要大量的扫描。对于光滑的表面以及黑色的表面都不能使得我们的扫描仪接受到信息。所以我们需要把对象画成平坦的灰色。&lt;/p&gt;

&lt;h3 id=&quot;section-5&quot;&gt;心得&lt;/h3&gt;

&lt;p&gt;这篇论文实在是太难看懂了，我只能稍微挑了点我稍微看懂了的写。一些部分也看得半懂不懂的样子，特别是后半部分，有点不知所云。感觉这一篇像是之前看到的那一篇的更深入的探讨，解决的问题也是更加深层次的东西。&lt;/p&gt;

&lt;p&gt;这里记录一下，之后如果自己看的论文多了相关的知识掌握得更多一点再回来看这篇可能会比较有收获。&lt;/p&gt;
</description>
        <pubDate>Mon, 10 Aug 2015 00:43:32 +0800</pubDate>
        <link>http://japhon.github.io/blog/2015/08/10/week4-16.html</link>
        <guid isPermaLink="true">http://japhon.github.io/blog/2015/08/10/week4-16.html</guid>
        
        <category>计算机图形学</category>
        
        
        <category>blog</category>
        
      </item>
    
  </channel>
</rss>
